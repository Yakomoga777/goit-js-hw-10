var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},e=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,r=/^0o[0-7]+$/i,a=parseInt,f="object"==typeof n&&n&&n.Object===Object&&n,c="object"==typeof self&&self&&self.Object===Object&&self,u=f||c||Function("return this")(),s=Object.prototype.toString,l=Math.max,p=Math.min,d=function(){return u.Date.now()};function m(n){var t=typeof n;return!!n&&("object"==t||"function"==t)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==s.call(n)}(n))return NaN;if(m(n)){var t="function"==typeof n.valueOf?n.valueOf():n;n=m(t)?t+"":t}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(e,"");var f=o.test(n);return f||r.test(n)?a(n.slice(2),f?2:8):i.test(n)?NaN:+n}t=function(n,t,e){var i,o,r,a,f,c,u=0,s=!1,v=!1,y=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function h(t){var e=i,r=o;return i=o=void 0,u=t,a=n.apply(r,e)}function b(n){return u=n,f=setTimeout(w,t),s?h(n):a}function j(n){var e=n-c;return void 0===c||e>=t||e<0||v&&n-u>=r}function w(){var n=d();if(j(n))return $(n);f=setTimeout(w,function(n){var e=t-(n-c);return v?p(e,r-(n-u)):e}(n))}function $(n){return f=void 0,y&&i?h(n):(i=o=void 0,a)}function T(){var n=d(),e=j(n);if(i=arguments,o=this,c=n,e){if(void 0===f)return b(c);if(v)return f=setTimeout(w,t),h(c)}return void 0===f&&(f=setTimeout(w,t)),a}return t=g(t)||0,m(e)&&(s=!!e.leading,r=(v="maxWait"in e)?l(g(e.maxWait)||0,t):r,y="trailing"in e?!!e.trailing:y),T.cancel=function(){void 0!==f&&clearTimeout(f),u=0,i=c=o=f=void 0},T.flush=function(){return void 0===f?a:$(d())},T};const v=document.querySelector("#search-box"),y=document.querySelector(".country-list"),h=document.querySelector(".country-info");function b(){y.innerHTML="",h.innerHTML=""}v.addEventListener("input",t((function(n){b(),function(){const n=v.value.trim();fetch(`https://restcountries.com/v3.1/name/${n}`).then((n=>n.json())).then((n=>{if(n.length>5)throw new Error(Notiflix.Notify.info("Too many matches found. Please enter a more specific name."));if(n.length>=2&n.length<=10)j(n);else if(1===n.length)t=n,b(),h.insertAdjacentHTML("beforeend",(n=>n.reduce(((n,t)=>n+function(n){return`\n \n  <p class="countri-item"><img\n      src="${n.flags.svg}"\n      alt="flag of${n.name.official}"\n      width="100"\n    /></p>\n  <p class="countri-item">${n.name.official}</p>\n  <p class="capital">Capital: <span>${n.capital}</span></p>\n  <p class="population">Population: <span>${n.population}</span></p>\n  <p class="languages">Languages: <span>${Object.values(n.languages)}</span></p>`}(t)),""))(t)),console.log("ðŸ”¥ ÐšÑ€Ð°Ñ—Ð½Ð° Ð·Ð½Ð°Ð¹Ð´ÐµÐ½Ð°!!!");else if(404===n.status)throw new Error(Notiflix.Notify.failure("Oops, there is no country with that name"));var t})).catch((n=>{}))}()}),1e3));const j=n=>{b();const t=(n=>n.reduce(((n,t)=>n+(n=>`<li class="countri-item">\n    <img\n      src="${n.flags.svg}"\n      alt="flag of${n.name.official}"\n      width="100"\n    />\n    <p>${n.name.official}</p>\n  </li>\n     `)(t)),""))(n);y.insertAdjacentHTML("beforeend",t)};
//# sourceMappingURL=index.bdc90655.js.map
